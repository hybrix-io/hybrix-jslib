module.exports=function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){const n=s(1),r=s(1),o=s(4).DEFAULT_TEST_SYMBOLS;function l(e){return{data:[{query:"/asset/"+e+"/test-hosts"},"rout"],step:"sequential"}}const i=e=>t=>{const s={};let n=0,r=0;for(let o in t){s[o]={};const l=t[o];if(e.includes(o)&&"object"==typeof l&&null!==l)for(let e in l){const t=l[e],i="Success"===t;i||++r,s[o][e]={valid:i,result:t,messages:["TODO"]},++n}else s[o].unknown={valid:!1,result:null,messages:["Asset not available"]},++n,++r}const o={assets:{},total:n,failures:r};return Object.keys(s).sort().forEach(e=>{o.assets[e]=s[e]}),o};t.runTests=function(e,t,s,n,r){e=e&&"*"!==e?e.split(","):o;const a={};for(let t of e)a[t]=l(t);t.sequential([{host:s},"addHost",a,"parallel",i(e)],n,e=>{console.error(e)},r)},t.web=n.web,t.cli=n.cli,t.xml=r.xml,t.renderSymbol=n.renderSymbol},function(e,t,s){s(0);const n=s(2);t.cli=e=>{const t=[],s=[];let r="\n";for(let o in e.assets)r+=o.toUpperCase()+" ",r+=n.renderSymbol(n.renderCellCLI,o,e.assets[o],t,s).join(""),r+="\n";r+="\n",r+="Issues:\n",s.sort();for(let e=0;e<s.length;++e)r+=" - "+s[e]+"\n";return r+="\n",r+="      SUCCESS RATE: "+Math.floor(100*((e.total-e.failures)/e.total||0))+"%\n",r},t.web=e=>{const t=[],s=[];let r='\n        <style>:target {\n          background-color: yellow;\n        }\n        .hostTests th {\n          text-align: left;\n        }\n        .hostTests td {\n          width: 20px;\n        }\n        .hostTests td:first-child {\n          padding-right: 10px;\n        }\n        .hostTests td:hover {\n          cursor: pointer;\n        }\n        .hostTests td:hover > .hostName {\n          display: block;\n        }\n        .hostTests .hostName {\n          position: absolute;\n          background: yellow;\n          display: none;\n          margin-top: -35px;\n          margin-left: 15px;\n          padding: 2px;\n          border: 1px solid black;\n        }\n        .hostTests .hostIssueTitle {\n          float: left;\n          width: 70px;\n        }\n        </style>\n        <span style="margin-right: 40px;"><b>Symbol</b></span><span><b>Hosts</b></span>\n        <table class="hostTests">\n        ';for(let o in e.assets)r+="<tr>",r+="<td>"+o+"</td>",r+=n.renderSymbol(n.renderCellWeb,o,e.assets[o],t,s).join(""),r+="</tr>";r+="</table>",r+="<h3>New Issues</h3>",r+="<ul>",s.sort();for(let e=0;e<s.length;++e)r+="<li>"+s[e]+"</li>";r+="</ul>",r+='<h3><a href="https://gitlab.com/groups/hybrix/-/issues?milestone_title=Coin+support+%3A+Test+Issues" target="_blank">Known Issues</a></h3>',r+="<ul>",t.sort();for(let e=0;e<t.length;++e)r+="<li>"+t[e]+"</li>";return r+="</ul>",r+="<h1>"+(e.total-e.failures)/e.total*100+"%</h1>",r}},function(e,t,s){const n=s(3),r=(e,t,s,n,r,o)=>{const l=[];for(let i in s){const a=s[i],u=e(t,i,a.valid,a.known,a.result,n,r,o);l.push(u)}return l};function o(e){return void 0===e?"undefined":JSON.stringify(e)}const l=(e,t,s,n,r,l,i,a)=>{const u=o(r).replace(/"/g,"");return`\n<testcase id="${e+"_"+t+" host"}" name="${e+"_"+t}" time="0.001">${s?"":`<failure message="${u}" type="ERROR"></failure>`}</testcase>`},i=(e,t,s,r,o,l,i,a)=>{const u=o?` target="_blank" href="${o}"`:"",c=o?"":` <a style="color:red;"target="_blank" href="${n.link(e,t,s,r)}"><b>Create issue</b></a>`;return`\n    ${a?`<span class="hostIssueTitle">${e.toUpperCase()}</span>`:""}\n    <b style="color:red;">\n      ${a?"- Host ping failed":l}\n    </b> :\n    <a name="${i+u}">\n      ${r}\n    </a>\n    ${c}\n  `},a=(e,t,s,n,r)=>`<td style="text-align:center;background-color:${e}" title="${t}"><a style="text-decoration:none; width: 100%;height: 100%;display: block;" href="#${s}">&nbsp;</a>${r?'<span class="hostName">'+n+"</span>":""}</td>`;t.xml=(e,t)=>{const s=[],n=[];let o="";for(let i in e.assets)o+=r(l,i,e.assets[i],s,n,t).join("");return o='<?xml version="1.0" encoding="UTF-8" ?><testsuites id="hybrix" name="hybrix" tests="'+e.total+'" failures="'+e.failures+'" time="0.001"><testsuite id="testsuite.hybrix" name="hybrix" tests="'+e.total+'" failures="'+e.failures+'" time="0.001">'+o,o+="</testsuite></testsuites>",o},t.json=e=>o(e),t.renderCellWeb=(e,t,s,n,r,l,u,c)=>{const d=o(r).replace(/"/g,""),m="string"==typeof s?"Success"===s:s,p=c?Object.keys(r)[0]:t,f=e+" "+p,b=e+"_"+p,h=n||{},g=c?p:h.message||void 0;if(n){const t=m?"purple":"orange";return l.push(i(e,p,h,g,h.link,f,b,c)),a(t,d,b,f,c)}return m?`<td style="text-align:center;background-color:green" title="${d}">&nbsp;</td>`:(u.push(i(e,p,h,d,h.link,f,b,c)),a("red",d,b,f,c))},t.stringify=o,t.renderSymbol=r,t.renderCellCLI=(e,t,s,n,r,l,i)=>{const a=o(r).replace(/"/g,"");return n?s?(n.link?l.push("[36m"+e+" "+t+"[0m : "+n.message):l.push("[36m"+e+" "+t+"[0m : "+n.message+" [31m [Create issue][0m"),"[36m OK [0m"):(n.link?l.push("[33m"+e+" "+t+"[0m : "+n.message+" (Returned "+a+")"):l.push("[33m"+e+" "+t+"[0m : "+n.message+" [31m [Create issue][0m"),"[33mWARN[0m"):s?"[32m OK [0m":(i.push("[31m"+e+" "+t+"[0m : returned "+a+" [31m [Create issue][0m"),"[31mFAIL[0m")}},function(e,t){e.exports={link:function(e,t,s,n){const r=s&&s.message?s.message:"returned "+n;return`https://gitlab.com/hybrix/hybrixd/node/issues/new?issue[description]=${encodeURIComponent('/label ~"\\* Development Team \\*"\n/milestone %"DEV - asset maintenance - 2020-Q1"\n'+r)}&issue[title]=${encodeURIComponent(e+" "+t+" "+r)}`}}},function(e,t){t.DEFAULT_TEST_SYMBOLS=["bch","dummy","eth","flo","ark","btc","burst","dash","dgb","etc","lsk","ltc","nxt","omni","rise","shift","ubq","waves","xcp","xem","xrp","zec","mock.btc","eth.hy","tomo.hy","hy"]}]);
var HybrixTest=function(e){var t={};function s(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(n,o,function(t){return e[t]}.bind(null,o));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=3)}([function(e,t,s){s(1),s(2);const n=s(4),o=(e,t,s,n,o)=>{const r=[];for(let l in s){const i=s[l],a=i.result;for(type_ in a){const a=i.result[type_],u=i.known,c=i.result,d=(s.messages,e(t,l,a,u,c,n,o,!0));r.push(d)}}return r},r=(e,t,s,o,r,l,i)=>{const a=n.stringify(r).replace(/"/g,""),u=void 0!==r&&null!==r?Object.keys(r)[0]:"",c=void 0!==r&&null!==r?u+" host":"host",d="Success"===s;return o?d?(o.link?l.push("[36m"+e+" "+c+"[0m : "+o.message):l.push("[36m"+e+" "+c+"[0m : "+o.message+" [31m [Create issue][0m"),{[u]:"[36m OK  [0m"}):(o.link?l.push("[33m"+e+" "+c+"[0m : "+o.message+" (Returned "+a+")"):l.push("[33m"+e+" "+c+"[0m : "+o.message+" [31m [Create issue][0m"),{[u]:"[33m WARN[0m"}):d?{[u]:"[32m OK  [0m"}:(i.push(e.toUpperCase()+"[31m "+c+"[0m : host ping failed. [31m [Create issue][0m"),{[u]:"[31m FAIL[0m"})};t.cli=(e=>{const t=[],s=[];let n="\n";for(let l in e.assets){n+=l.toUpperCase()+"\n";const i=o(r,l,e.assets[l],t,s).reduce((e,t)=>({...e,...t}),{});n+=Object.keys(i).reduce((e,t,s)=>`${e}${i[t]} - ${t}\n`,""),n+="\n"}n+="\n",n+="New Issues:\n",s.sort();for(let e=0;e<s.length;++e)n+=" - "+s[e]+"\n";n+="\n",n+="Known Issues:\n",t.sort();for(let e=0;e<t.length;++e)n+=" - "+t[e]+"\n";return(n+="\n")+"      SUCCESS RATE: "+Math.floor(100*((e.total-e.failures)/e.total||0))+"%\n"}),t.web=(e=>{const t=[],s=[];let r='\n        <style>:target {\n          background-color: yellow;\n        }\n        .hostTests th {\n          text-align: left;\n        }\n        .hostTests td {\n          width: 20px;\n        }\n        .hostTests td:first-child {\n          padding-right: 10px;\n        }\n        .hostTests td:hover {\n          cursor: pointer;\n        }\n        .hostTests td:hover > .hostName {\n          display: block;\n        }\n        .hostTests .hostName {\n          position: absolute;\n          background: yellow;\n          display: none;\n          margin-top: -35px;\n          margin-left: 15px;\n          padding: 2px;\n          border: 1px solid black;\n        }\n        .hostTests .hostIssueTitle {\n          float: left;\n          width: 70px;\n        }\n        </style>\n        <span style="margin-right: 40px;"><b>Symbol</b></span><span><b>Hosts</b></span>\n        <table class="hostTests">\n        ';for(let l in e.assets)r+="<tr>",r+="<td>"+l+"</td>",r+=o(n.renderCellWeb,l,e.assets[l],t,s).join(""),r+="</tr>";r+="</table>",r+="<h3>New Issues</h3>",r+="<ul>",s.sort();for(let e=0;e<s.length;++e)r+="<li>"+s[e]+"</li>";r+="</ul>",r+='<h3><a href="https://gitlab.com/groups/hybrix/-/issues?milestone_title=Coin+support+%3A+Test+Issues" target="_blank">Known Issues</a></h3>',r+="<ul>",t.sort();for(let e=0;e<t.length;++e)r+="<li>"+t[e]+"</li>";return(r+="</ul>")+"<h1>"+(e.total-e.failures)/e.total*100+"%</h1>"})},function(e,t,s){const n=s(0),o=s(0),r=["bch","eth","flo","ark","btc","burst","dash","dgb","etc","lsk","ltc","nxt","omni","rise","shift","ubq","waves","xcp","xem","xrp","zec","eth.xhy","waves.xhy","nxt.xhy","omni.xhy","xcp.xhy","xem.xhy"];const l=Object.keys((e=>(e=void 0===(e=e)?{}:e,["sample","details","test"].forEach(t=>{void 0===e[t]&&(e[t]={})}),{testHosts:{data:(e=e).testHosts,step:"id"}}))({}));t.runTests=function(e,t,s,n,o,i){const a={};e=e&&"*"!==e?e.split(","):r;for(let t of e)a[t]={data:[{symbol:t=t},"addAsset",{_options:{passErrors:!0},hosts:{data:{query:"/asset/"+t+"/test-hosts"},step:"rout"}},"parallel",e=>({...Object.keys(e.hosts).map(t=>({[t]:e.hosts[t]}))})],step:"sequential"};t.sequential(["init",{username:"POMEW4B5XACN3ZCX",password:"TVZS7LODA5CSGP6U"},"session",{host:s},"addHost",a,"parallel",((e,t)=>s=>{const n={};let o=0,r=0;for(let i in s){n[i]={};const a=s[i];if(e.includes(i)&&void 0!==a){a.details,a.test;for(let e in a){const s=a[e];for(let l in s){const a="Success"===s[l];let u;a||(u=t?t[i+"_"+e]:void 0)||++r,n[i][e]={valid:a,known:u,result:s,messages:["TODO"]},++o}}}else for(let e of l){const s=t?t[i+"_"+e]:void 0;n[i][e]={valid:!1,known:s,result:null,messages:["Asset not available"]},++o,++r}}const i={assets:{},total:o,failures:r};return Object.keys(n).sort().forEach(e=>{i.assets[e]=n[e]}),i})(e,i)],n,e=>{console.error(e)},o)},t.xml=o.xml,t.web=n.web,t.json=o.json,t.cli=n.cli},function(e,t){e.exports={link:function(e,t,s,n){const o=s&&s.message?s.message:"returned "+n;return`https://gitlab.com/hybrix/hybrixd/node/issues/new?issue[description]=${encodeURIComponent(`/label ~"\\* Development Team \\*"\n/milestone %"DEV - asset maintenance - 2020-Q1"\n${o}`)}&issue[title]=${encodeURIComponent(e+" "+t+" "+o)}`}}},function(e,t,s){const n=s(0),o=s(1),r=s(5);window.go=r.go(o,n)},function(e,t,s){const n=s(2);function o(e){return void 0===e?"undefined":JSON.stringify(e)}const r=(e,t,s,n,r,l,i,a)=>{o(r).replace(/"/g,"");const u=a?Object.keys(r)[0]:t;return`\n    <testcase id="${e+"_"+u+" host"}" name="${e+" "+u+" host"}" time="0.001">\n      ${s?'<failure message="${title}" type="ERROR"></failure>':""}\n    </testcase>`},l=(e,t,s,o,r,l,i,a)=>{const u=r?` target="_blank" href="${r}"`:"",c=r?"":` <a style="color:red;"target="_blank" href="${n.link(e,t,s,o)}"><b>Create issue</b></a>`;return`\n    ${a?`<span class="hostIssueTitle">${e.toUpperCase()}</span>`:""}\n    <b style="color:red;">\n      ${a?"- Host ping failed":l}\n    </b> :\n    <a name="${i+u}">\n      ${o}\n    </a>\n    ${c}\n  `},i=(e,t,s,n,o)=>`<td style="text-align:center;background-color:${e}" title="${t}"><a style="text-decoration:none; width: 100%;height: 100%;display: block;" href="#${s}">&nbsp;</a>${o?'<span class="hostName">'+n+"</span>":""}</td>`;t.xml=((e,t)=>{const s=[],n=[];let o="";for(let l in e.assets)o=renderSymbol(r,l,e.assets[l],s,n,t).join("");return(o='<?xml version="1.0" encoding="UTF-8" ?><testsuites id="hybrix" name="hybrix" tests="'+e.total+'" failures="'+e.failures+'" time="0.001"><testsuite id="testsuite.hybrix" name="hybrix" tests="'+e.total+'" failures="'+e.failures+'" time="0.001">'+o)+"</testsuite></testsuites>"}),t.json=(e=>o(e)),t.renderCellWeb=((e,t,s,n,r,a,u,c)=>{const d=o(r).replace(/"/g,""),p="string"==typeof s?"Success"===s:s,h=c?Object.keys(r)[0]:t,f=e+" "+h,b=e+"_"+h,m=n||{},g=c?h:m.message||void 0;if(n){const t=p?"purple":"orange";return a.push(l(e,h,m,g,m.link,f,b,c)),i(t,d,b,f,c)}return p?`<td style="text-align:center;background-color:green" title="${d}">&nbsp;</td>`:(u.push(l(e,h,m,d,m.link,f,b,c)),i("red",d,b,f,c))}),t.stringify=o},function(e,t){let s="http://localhost:1111/";function n(e,t){t||(t=window.location.href),e=e.replace(/[[\]]/g,"\\$&");const s=new RegExp("[?&]"+e.toLowerCase()+"(=([^&#]*)|&|#|$)").exec(t);return s?s[2]?decodeURIComponent(s[2].replace(/\+/g," ")):"":null}t.go=function(e,t){return function(){const o=n("symbol"),r=new Hybrix.Interface({XMLHttpRequest:XMLHttpRequest});DEBUG="true"===n("debug"),n("host")&&(s=n("host")),e.runTests(o,r,s,e=>{document.body.innerHTML=t.web(e)},e=>{document.body.innerHTML='<div style="border-style:solid; border-width:1px; border-radius:10px; height:20px;"><div style="text-align:center;color:white;background-color:blue; border-radius:10px; height:20px; width:'+100*e+'%">'+Math.floor(100*e)+"%</div></div>"})}}}]);